{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(grep:*)",
      "WebFetch(domain:qdrant.tech)",
      "WebFetch(domain:docs.cohere.com)",
      "Bash(python:*)",
      "Bash(sed:*)",
      "Bash(rm:*)",
      "Bash(true)",
      "Bash(rg:*)",
      "Bash(touch:*)",
      "Bash(mkdir:*)",
      "Bash(npm create:*)",
      "Bash(pip install:*)",
      "Bash(ls:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(ss:*)",
      "Bash(curl:*)",
      "Bash(env)",
      "Bash(source:*)",
      "Bash(pkill:*)",
      "Bash(powershell.exe:*)",
      "Bash(docker-compose config:*)",
      "Bash(docker-compose:*)",
      "Bash(docker logs:*)",
      "Bash(docker exec:*)",
      "Bash(docker cp:*)",
      "Bash(docker restart:*)",
      "Bash(docker stop:*)",
      "Bash(docker start:*)",
      "Bash(docker container ls:*)",
      "Bash(docker volume:*)",
      "Bash(docker run:*)",
      "Bash(docker container prune:*)",
      "Bash(docker rm:*)",
      "Bash(docker inspect:*)",
      "Bash(chmod:*)",
      "Bash(docker compose:*)",
      "Bash(systemctl status:*)",
      "Bash(service docker:*)",
      "Bash(docker:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:socket.io)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(node:*)",
      "Bash(npm install)",
      "mcp__brave-search__brave_web_search",
      "Bash(dos2unix:*)",
      "Bash(sed -i 's/\\r$//' update_supabase_env.sh)",
      "WebFetch(domain:openalternative.co)",
      "Bash(ruff check:*)",
      "Bash(cat:*)",
      "Bash(pip3 install:*)",
      "Bash(./reset_supabase_jwt.sh:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:medium.com)",
      "WebFetch(domain:testdriven.io)",
      "WebFetch(domain:www.freecodecamp.org)",
      "Bash(tree:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(/mnt/c/Users/jlemr/PycharmProjects/day-17-start/venv/Scripts/python.exe -m pip install psycopg2-binary)",
      "Bash(/mnt/c/Users/jlemr/PycharmProjects/day-17-start/venv/Scripts/python.exe fix_alembic_state.py)",
      "Bash(/mnt/c/Users/jlemr/PycharmProjects/day-17-start/venv/Scripts/python.exe -m alembic -c src/migrations/alembic.ini revision -m \"add password_hash column\")",
      "Bash(/mnt/c/Users/jlemr/PycharmProjects/day-17-start/venv/Scripts/python.exe -m alembic -c src/migrations/alembic.ini upgrade head)",
      "Bash(/mnt/c/Users/jlemr/PycharmProjects/day-17-start/venv/Scripts/python.exe init_db.py)",
      "Bash(npm run lint)",
      "Bash(./venv/bin/python:*)",
      "Bash(./venv/bin/ruff check src/middleware/auth_middleware.py)",
      "Bash(bash:*)"
    ],
    "deny": []
  }
}